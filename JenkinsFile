import com.cloudbees.plugins.credentials.impl.*;
import com.cloudbees.plugins.credentials.*;
import com.cloudbees.plugins.credentials.domains.*;

pipeline 
{
    environment 
    {   
        GIT_CREDENTIALS_ID = "GIT_CREDENTIALS"
		GIT_REPOSITORY = 'https://gitlab.com/Geeks.Microservices/AccessHub.git'				
		IMAGE = "${CONTIANER_REPOSITORY_URL}:v_${BUILD_NUMBER}" 
		ACCELERATE_PACKAGE_FILENAME="packages.json"
    }
    agent any
    stages
	{    
	         stage('Prepare credentials') 
            {
                steps
                {
                    script
                        {	
                            
							def git_credentials = (Credentials) new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL,GIT_CREDENTIALS_ID, "description", "matt@geeks.ltd.uk", "G!7L@62017")
							SystemCredentialsProvider.getInstance().getStore().removeCredentials(Domain.global(), git_credentials)
                            SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), git_credentials)
                        }
                }				
            }			
            stage('Clone sources') 
            {
                steps
                {
                    script
                        {						
							git credentialsId: GIT_CREDENTIALS_ID,  url: GIT_REPOSITORY
                        }
                }				
            }
			
			stage('Build the source code') 
            {
                steps
                {
                    script
                        {	
							bat "accelerate-package-restore export --out %ACCELERATE_PACKAGE_FILENAME%"
                            bat "docker build -t $IMAGE -f Build.Dockerfile --build-arg ACCELERATE_PACKAGE_FILENAME=%ACCELERATE_PACKAGE_FILENAME% --build-arg BUILD_NUMBER=$BUILD_NUMBER --build-arg HUB_SERVICE_URL=$HUB_SERVICE_URL ."
                        }
                }				
            }			

    }
     post
    {
		success
		{
			script 
			{
				bat "docker rmi $IMAGE | true"
			}
		}     
    }	
}

